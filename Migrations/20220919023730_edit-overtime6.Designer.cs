// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dotnet_2.Infrastructure.Data;

#nullable disable

namespace Persona.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220919023730_edit-overtime6")]
    partial class editovertime6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.AuthTokenn", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("expired_at")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("expired_at");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("role");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("token");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("AuthTokenn");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.Organization", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("headid")
                        .HasColumnType("integer");

                    b.Property<string>("organization_name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("organization_name");

                    b.HasKey("id");

                    b.HasIndex("headid");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.Overtime", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("approved_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("approved_time")
                        .HasColumnType("time without time zone");

                    b.Property<string>("attachment")
                        .HasColumnType("text");

                    b.Property<DateOnly>("completed_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("completed_time")
                        .HasColumnType("time without time zone");

                    b.Property<int>("duration")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("end_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("end_time")
                        .HasColumnType("time without time zone");

                    b.Property<int>("is_completed")
                        .HasColumnType("integer");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<DateOnly>("request_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("request_time")
                        .HasColumnType("time without time zone");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("start_time")
                        .HasColumnType("time without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("status_text")
                        .HasColumnType("text");

                    b.Property<int?>("userid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("Overtime");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("employment_status")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("employment_status");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("grade");

                    b.Property<string>("join_date")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("join_date");

                    b.Property<string>("ktp")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ktp");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("nik")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("nik");

                    b.Property<string>("npwp")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("npwp");

                    b.Property<int?>("organizationid")
                        .HasColumnType("integer");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("role");

                    b.HasKey("id");

                    b.HasIndex("organizationid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.WorkSchedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<TimeOnly>("end_break_time1")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("end_break_time2")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("end_time")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("start_break_time1")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("start_break_time2")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("start_time")
                        .HasColumnType("time without time zone");

                    b.Property<string>("work_shedule")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("WorkSchedules");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.Organization", b =>
                {
                    b.HasOne("dotnet_2.Infrastructure.Data.Models.User", "head")
                        .WithMany()
                        .HasForeignKey("headid");

                    b.Navigation("head");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.Overtime", b =>
                {
                    b.HasOne("dotnet_2.Infrastructure.Data.Models.User", "user")
                        .WithMany("users")
                        .HasForeignKey("userid");

                    b.Navigation("user");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.User", b =>
                {
                    b.HasOne("dotnet_2.Infrastructure.Data.Models.Organization", "organization")
                        .WithMany("member")
                        .HasForeignKey("organizationid");

                    b.Navigation("organization");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.Organization", b =>
                {
                    b.Navigation("member");
                });

            modelBuilder.Entity("dotnet_2.Infrastructure.Data.Models.User", b =>
                {
                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
